quarkus.http.port=8085

quarkus.http.cors=true
%dev.quarkus.http.cors.origins=*

quarkus.keycloak.admin-client.enabled=true
quarkus.keycloak.admin-client.server-url=http://localhost:8080
quarkus.keycloak.admin-client.realm=deafult-realm
quarkus.keycloak.admin-client.client-id=admin-client
quarkus.keycloak.admin-client.client-secret= # Fill in for admin-client
quarkus.keycloak.admin-client.username= # remove default username
quarkus.keycloak.admin-client.password= # remove default password
quarkus.keycloak.admin-client.grant-type=CLIENT_CREDENTIALS
%prod.quarkus.oidc.auth-server-url=http://localhost:8080/realms/default-realm
login.realm=deafult-realm
quarkus.oidc.application-type=service
quarkus.oidc.client-id=${quarkus.keycloak.admin-client.client-id}
quarkus.oidc.credentials.secret=${quarkus.keycloak.admin-client.client-secret}

quarkus.rest-client.login.url=http://localhost:8080/realms/default-realm/protocol/openid-connect/token

# Fill in with client that enables user creation and/or login on behalf of user
# Here it is currently being set to be the same as the admin-client for testing purposes
quarkus.rest-client.login.client-id=${quarkus.keycloak.admin-client.client-id}
quarkus.rest-client.login.credentials.secret=${quarkus.keycloak.admin-client.client-secret}
quarkus.rest-client.login.scope=openid
quarkus.rest-client.extensions-api.scope=jakarta.inject.Singleton